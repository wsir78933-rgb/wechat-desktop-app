name: Release Build

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Create PyInstaller spec file
      run: |
        $specContent = @"
        # -*- mode: python ; coding: utf-8 -*-
        import os
        import sys

        project_root = os.path.abspath('.')
        src_path = os.path.join(project_root, 'src', 'main', 'python')

        hidden_imports = [
            'PyQt5',
            'PyQt5.QtCore',
            'PyQt5.QtGui',
            'PyQt5.QtWidgets',
            'ui',
            'ui.main_window',
            'core',
            'utils',
            'logging',
            'sqlite3',
            'openpyxl',
        ]

        a = Analysis(
            ['src\\main\\python\\main.py'],
            pathex=[src_path],
            binaries=[],
            datas=[],
            hiddenimports=hidden_imports,
            hookspath=[],
            hooksconfig={},
            runtime_hooks=[],
            excludes=[],
            win_no_prefer_redirects=False,
            win_private_assemblies=False,
            cipher=None,
            noarchive=False,
        )

        pyz = PYZ(a.pure, a.zipped_data, cipher=None)

        exe = EXE(
            pyz,
            a.scripts,
            a.binaries,
            a.zipfiles,
            a.datas,
            [],
            name='对标账号管理软件',
            debug=False,
            bootloader_ignore_signals=False,
            strip=False,
            upx=True,
            upx_exclude=[],
            runtime_tmpdir=None,
            console=False,
            disable_windowed_traceback=False,
            argv_emulation=False,
            target_arch=None,
            codesign_identity=None,
            entitlements_file=None,
        )
        "@
        $specContent | Out-File -FilePath "build.spec" -Encoding utf8

    - name: Build Windows executable
      run: |
        pyinstaller --clean build.spec

    - name: Create ZIP archive
      run: |
        Compress-Archive -Path dist/对标账号管理软件.exe -DestinationPath 对标账号管理软件-windows.zip

    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: 对标账号管理软件-windows.zip
        body: |
          ## 对标账号管理软件 - Windows版本

          ### 安装说明
          1. 下载 `对标账号管理软件-windows.zip`
          2. 解压到任意目录
          3. 双击 `对标账号管理软件.exe` 运行

          ### 功能特性
          - 账号管理（添加、编辑、删除）
          - 文章管理（添加、编辑、删除、搜索）
          - 数据导出（Excel、JSON、Markdown）
          - 左右分栏界面
          - Material Design风格

          ### 技术栈
          - Python 3.10
          - PyQt5
          - SQLite3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
